{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","email","name","className","href","TodoInfo","todo","completed","title","id","cn","TodoList","todos","map","username","initialTodos","userId","usersFromServer","find","App","useState","setTodos","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","action","method","onSubmit","event","allTodos","preventDefault","trim","newTodo","currentTodo","addNewTodo","userFromServer","Math","max","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.815a14ab.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    email,\n    name,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    user,\n    completed,\n    title,\n    id,\n  } = todo;\n\n  return (\n\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst initialTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const addNewTodo = (newTodo: Todo) => {\n    setTodos(currentTodo => [...currentTodo, newTodo]);\n  };\n\n  function getNewTodoId(allTodos: Todo[]) {\n    const maxId = Math.max(\n      ...allTodos.map(todo => todo.id),\n    );\n\n    return maxId + 1;\n  }\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n\n    setHasTitleError(false);\n    setHasUserIdError(false);\n  };\n\n  const handleAdd = (event: React.FormEvent) => {\n    event.preventDefault();\n    setHasTitleError(!title.trim());\n    setHasUserIdError(!userId);\n\n    if (!title.trim() || !userId) {\n      return;\n    }\n\n    const newTodo = ({\n      user: usersFromServer.find(userFromServer => userFromServer.id === userId)\n       || null,\n      id: getNewTodoId(todos),\n      title,\n      completed: false,\n      userId,\n    });\n\n    addNewTodo(newTodo);\n    reset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleAdd}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"field-title\" className=\"label\">Title: </label>\n          <input\n            id=\"field-title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"field-user\" className=\"label\">User: </label>\n          <select\n            id=\"field-user\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\" key=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(userFromServer => (\n              <option value={userFromServer.id} key={userFromServer.id}>\n                {userFromServer.name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}